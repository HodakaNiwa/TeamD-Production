//*****************************************************************************
//
//     UIの処理[UI.cpp]
//     Auther:Hodaka Niwa
//
//*****************************************************************************
#include "UI.h"
#include "scene2D.h"

//*****************************************************************************
//    マクロ定義
//*****************************************************************************
#define UI_BG_WIDTH  (90.0f)
#define UI_BG_HEIGHT (SCREEN_HEIGHT / 2)
#define UI_BG_POS    (D3DXVECTOR3(SCREEN_WIDTH - UI_BG_WIDTH,SCREEN_HEIGHT / 2,0.0f))
#define UI_BG_COL    (D3DXCOLOR(1.0f,1.0f,1.0f,1.0f))

//*****************************************************************************
//    静的メンバ変数宣言
//*****************************************************************************


//=============================================================================
//    コンストラクタ
//=============================================================================
CUI::CUI()
{

}

//=============================================================================
//    デストラクタ
//=============================================================================
CUI::~CUI()
{

}

//=============================================================================
//    生成処理
//=============================================================================
CUI *CUI::Create(void)
{
	CUI *pUI = NULL;  // UIクラス型のポインタ
	if (pUI == NULL)
	{// メモリが空になっている
		pUI = new CUI;
		if (pUI != NULL)
		{// インスタンスを生成できた
			if (FAILED(pUI->Init()))
			{// 初期化に失敗した
				return NULL;
			}
		}
		else
		{// インスタンスを生成できなかった
			return NULL;
		}
	}
	else
	{// インスタンスを生成できなかった
		return NULL;
	}

	return pUI;
}


//=============================================================================
//    初期化処理
//=============================================================================
HRESULT CUI::Init(void)
{
	// 背景に使用するポリゴンを作成
	m_pBg = CScene2D::Create(UI_BG_POS, UI_BG_COL, UI_BG_WIDTH, UI_BG_HEIGHT);

	return S_OK;
}

//=============================================================================
//    終了処理
//=============================================================================
void CUI::Uninit(void)
{
	// 背景に使用するポリゴンの破棄
	if (m_pBg != NULL)
	{
		m_pBg->Uninit();
		m_pBg = NULL;
	}
}